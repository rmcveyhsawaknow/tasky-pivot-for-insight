digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] data.aws_availability_zones.available (expand)" [label = "data.aws_availability_zones.available", shape = "box"]
		"[root] data.aws_caller_identity.current (expand)" [label = "data.aws_caller_identity.current", shape = "box"]
		"[root] module.eks.aws_eks_addon.coredns" [label = "module.eks.aws_eks_addon.coredns", shape = "box"]
		"[root] module.eks.aws_eks_addon.coredns (expand)" [label = "module.eks.aws_eks_addon.coredns", shape = "box"]
		"[root] module.eks.aws_eks_addon.ebs_csi" [label = "module.eks.aws_eks_addon.ebs_csi", shape = "box"]
		"[root] module.eks.aws_eks_addon.ebs_csi (expand)" [label = "module.eks.aws_eks_addon.ebs_csi", shape = "box"]
		"[root] module.eks.aws_eks_addon.kube_proxy" [label = "module.eks.aws_eks_addon.kube_proxy", shape = "box"]
		"[root] module.eks.aws_eks_addon.kube_proxy (expand)" [label = "module.eks.aws_eks_addon.kube_proxy", shape = "box"]
		"[root] module.eks.aws_eks_addon.vpc_cni" [label = "module.eks.aws_eks_addon.vpc_cni", shape = "box"]
		"[root] module.eks.aws_eks_addon.vpc_cni (expand)" [label = "module.eks.aws_eks_addon.vpc_cni", shape = "box"]
		"[root] module.eks.aws_eks_cluster.main" [label = "module.eks.aws_eks_cluster.main", shape = "box"]
		"[root] module.eks.aws_eks_cluster.main (expand)" [label = "module.eks.aws_eks_cluster.main", shape = "box"]
		"[root] module.eks.aws_eks_node_group.main" [label = "module.eks.aws_eks_node_group.main", shape = "box"]
		"[root] module.eks.aws_eks_node_group.main (expand)" [label = "module.eks.aws_eks_node_group.main", shape = "box"]
		"[root] module.eks.aws_iam_openid_connect_provider.eks" [label = "module.eks.aws_iam_openid_connect_provider.eks", shape = "box"]
		"[root] module.eks.aws_iam_openid_connect_provider.eks (expand)" [label = "module.eks.aws_iam_openid_connect_provider.eks", shape = "box"]
		"[root] module.eks.aws_iam_policy.aws_load_balancer_controller" [label = "module.eks.aws_iam_policy.aws_load_balancer_controller", shape = "box"]
		"[root] module.eks.aws_iam_policy.aws_load_balancer_controller (expand)" [label = "module.eks.aws_iam_policy.aws_load_balancer_controller", shape = "box"]
		"[root] module.eks.aws_iam_role.aws_load_balancer_controller" [label = "module.eks.aws_iam_role.aws_load_balancer_controller", shape = "box"]
		"[root] module.eks.aws_iam_role.aws_load_balancer_controller (expand)" [label = "module.eks.aws_iam_role.aws_load_balancer_controller", shape = "box"]
		"[root] module.eks.aws_iam_role.eks_cluster" [label = "module.eks.aws_iam_role.eks_cluster", shape = "box"]
		"[root] module.eks.aws_iam_role.eks_cluster (expand)" [label = "module.eks.aws_iam_role.eks_cluster", shape = "box"]
		"[root] module.eks.aws_iam_role.eks_node_group" [label = "module.eks.aws_iam_role.eks_node_group", shape = "box"]
		"[root] module.eks.aws_iam_role.eks_node_group (expand)" [label = "module.eks.aws_iam_role.eks_node_group", shape = "box"]
		"[root] module.eks.aws_iam_role_policy_attachment.aws_load_balancer_controller_attach (expand)" [label = "module.eks.aws_iam_role_policy_attachment.aws_load_balancer_controller_attach", shape = "box"]
		"[root] module.eks.aws_iam_role_policy_attachment.eks_cluster_policy (expand)" [label = "module.eks.aws_iam_role_policy_attachment.eks_cluster_policy", shape = "box"]
		"[root] module.eks.aws_iam_role_policy_attachment.eks_cni_policy (expand)" [label = "module.eks.aws_iam_role_policy_attachment.eks_cni_policy", shape = "box"]
		"[root] module.eks.aws_iam_role_policy_attachment.eks_container_registry_policy (expand)" [label = "module.eks.aws_iam_role_policy_attachment.eks_container_registry_policy", shape = "box"]
		"[root] module.eks.aws_iam_role_policy_attachment.eks_worker_node_policy (expand)" [label = "module.eks.aws_iam_role_policy_attachment.eks_worker_node_policy", shape = "box"]
		"[root] module.eks.aws_security_group.eks_additional" [label = "module.eks.aws_security_group.eks_additional", shape = "box"]
		"[root] module.eks.aws_security_group.eks_additional (expand)" [label = "module.eks.aws_security_group.eks_additional", shape = "box"]
		"[root] module.eks.aws_security_group_rule.mongodb_from_eks_additional" [label = "module.eks.aws_security_group_rule.mongodb_from_eks_additional", shape = "box"]
		"[root] module.eks.aws_security_group_rule.mongodb_from_eks_additional (expand)" [label = "module.eks.aws_security_group_rule.mongodb_from_eks_additional", shape = "box"]
		"[root] module.eks.aws_security_group_rule.mongodb_from_eks_cluster" [label = "module.eks.aws_security_group_rule.mongodb_from_eks_cluster", shape = "box"]
		"[root] module.eks.aws_security_group_rule.mongodb_from_eks_cluster (expand)" [label = "module.eks.aws_security_group_rule.mongodb_from_eks_cluster", shape = "box"]
		"[root] module.eks.data.aws_iam_policy_document.aws_load_balancer_controller_assume_role_policy" [label = "module.eks.data.aws_iam_policy_document.aws_load_balancer_controller_assume_role_policy", shape = "box"]
		"[root] module.eks.data.aws_iam_policy_document.aws_load_balancer_controller_assume_role_policy (expand)" [label = "module.eks.data.aws_iam_policy_document.aws_load_balancer_controller_assume_role_policy", shape = "box"]
		"[root] module.eks.data.tls_certificate.eks" [label = "module.eks.data.tls_certificate.eks", shape = "box"]
		"[root] module.eks.data.tls_certificate.eks (expand)" [label = "module.eks.data.tls_certificate.eks", shape = "box"]
		"[root] module.mongodb_ec2.aws_cloudwatch_log_group.mongodb" [label = "module.mongodb_ec2.aws_cloudwatch_log_group.mongodb", shape = "box"]
		"[root] module.mongodb_ec2.aws_cloudwatch_log_group.mongodb (expand)" [label = "module.mongodb_ec2.aws_cloudwatch_log_group.mongodb", shape = "box"]
		"[root] module.mongodb_ec2.aws_iam_instance_profile.mongodb" [label = "module.mongodb_ec2.aws_iam_instance_profile.mongodb", shape = "box"]
		"[root] module.mongodb_ec2.aws_iam_instance_profile.mongodb (expand)" [label = "module.mongodb_ec2.aws_iam_instance_profile.mongodb", shape = "box"]
		"[root] module.mongodb_ec2.aws_iam_role.mongodb" [label = "module.mongodb_ec2.aws_iam_role.mongodb", shape = "box"]
		"[root] module.mongodb_ec2.aws_iam_role.mongodb (expand)" [label = "module.mongodb_ec2.aws_iam_role.mongodb", shape = "box"]
		"[root] module.mongodb_ec2.aws_iam_role_policy_attachment.mongodb_admin (expand)" [label = "module.mongodb_ec2.aws_iam_role_policy_attachment.mongodb_admin", shape = "box"]
		"[root] module.mongodb_ec2.aws_instance.mongodb" [label = "module.mongodb_ec2.aws_instance.mongodb", shape = "box"]
		"[root] module.mongodb_ec2.aws_instance.mongodb (expand)" [label = "module.mongodb_ec2.aws_instance.mongodb", shape = "box"]
		"[root] module.mongodb_ec2.aws_security_group.mongodb" [label = "module.mongodb_ec2.aws_security_group.mongodb", shape = "box"]
		"[root] module.mongodb_ec2.aws_security_group.mongodb (expand)" [label = "module.mongodb_ec2.aws_security_group.mongodb", shape = "box"]
		"[root] module.mongodb_ec2.data.aws_ami.amazon_linux_2 (expand)" [label = "module.mongodb_ec2.data.aws_ami.amazon_linux_2", shape = "box"]
		"[root] module.s3_backup.aws_s3_bucket.backup" [label = "module.s3_backup.aws_s3_bucket.backup", shape = "box"]
		"[root] module.s3_backup.aws_s3_bucket.backup (expand)" [label = "module.s3_backup.aws_s3_bucket.backup", shape = "box"]
		"[root] module.s3_backup.aws_s3_bucket_lifecycle_configuration.backup (expand)" [label = "module.s3_backup.aws_s3_bucket_lifecycle_configuration.backup", shape = "box"]
		"[root] module.s3_backup.aws_s3_bucket_policy.backup_public_read (expand)" [label = "module.s3_backup.aws_s3_bucket_policy.backup_public_read", shape = "box"]
		"[root] module.s3_backup.aws_s3_bucket_public_access_block.backup (expand)" [label = "module.s3_backup.aws_s3_bucket_public_access_block.backup", shape = "box"]
		"[root] module.s3_backup.aws_s3_bucket_versioning.backup (expand)" [label = "module.s3_backup.aws_s3_bucket_versioning.backup", shape = "box"]
		"[root] module.s3_backup.random_string.bucket_suffix (expand)" [label = "module.s3_backup.random_string.bucket_suffix", shape = "box"]
		"[root] module.vpc.aws_eip.nat (expand)" [label = "module.vpc.aws_eip.nat", shape = "box"]
		"[root] module.vpc.aws_eip.nat[0]" [label = "module.vpc.aws_eip.nat", shape = "box"]
		"[root] module.vpc.aws_eip.nat[1]" [label = "module.vpc.aws_eip.nat", shape = "box"]
		"[root] module.vpc.aws_eip.nat[2]" [label = "module.vpc.aws_eip.nat", shape = "box"]
		"[root] module.vpc.aws_internet_gateway.main" [label = "module.vpc.aws_internet_gateway.main", shape = "box"]
		"[root] module.vpc.aws_internet_gateway.main (expand)" [label = "module.vpc.aws_internet_gateway.main", shape = "box"]
		"[root] module.vpc.aws_nat_gateway.main (expand)" [label = "module.vpc.aws_nat_gateway.main", shape = "box"]
		"[root] module.vpc.aws_nat_gateway.main[0]" [label = "module.vpc.aws_nat_gateway.main", shape = "box"]
		"[root] module.vpc.aws_nat_gateway.main[1]" [label = "module.vpc.aws_nat_gateway.main", shape = "box"]
		"[root] module.vpc.aws_nat_gateway.main[2]" [label = "module.vpc.aws_nat_gateway.main", shape = "box"]
		"[root] module.vpc.aws_route_table.private (expand)" [label = "module.vpc.aws_route_table.private", shape = "box"]
		"[root] module.vpc.aws_route_table.private[0]" [label = "module.vpc.aws_route_table.private", shape = "box"]
		"[root] module.vpc.aws_route_table.private[1]" [label = "module.vpc.aws_route_table.private", shape = "box"]
		"[root] module.vpc.aws_route_table.private[2]" [label = "module.vpc.aws_route_table.private", shape = "box"]
		"[root] module.vpc.aws_route_table.public" [label = "module.vpc.aws_route_table.public", shape = "box"]
		"[root] module.vpc.aws_route_table.public (expand)" [label = "module.vpc.aws_route_table.public", shape = "box"]
		"[root] module.vpc.aws_route_table_association.private (expand)" [label = "module.vpc.aws_route_table_association.private", shape = "box"]
		"[root] module.vpc.aws_route_table_association.public (expand)" [label = "module.vpc.aws_route_table_association.public", shape = "box"]
		"[root] module.vpc.aws_security_group.vpc_endpoints" [label = "module.vpc.aws_security_group.vpc_endpoints", shape = "box"]
		"[root] module.vpc.aws_security_group.vpc_endpoints (expand)" [label = "module.vpc.aws_security_group.vpc_endpoints", shape = "box"]
		"[root] module.vpc.aws_subnet.private (expand)" [label = "module.vpc.aws_subnet.private", shape = "box"]
		"[root] module.vpc.aws_subnet.private[0]" [label = "module.vpc.aws_subnet.private", shape = "box"]
		"[root] module.vpc.aws_subnet.private[1]" [label = "module.vpc.aws_subnet.private", shape = "box"]
		"[root] module.vpc.aws_subnet.private[2]" [label = "module.vpc.aws_subnet.private", shape = "box"]
		"[root] module.vpc.aws_subnet.public (expand)" [label = "module.vpc.aws_subnet.public", shape = "box"]
		"[root] module.vpc.aws_subnet.public[0]" [label = "module.vpc.aws_subnet.public", shape = "box"]
		"[root] module.vpc.aws_subnet.public[1]" [label = "module.vpc.aws_subnet.public", shape = "box"]
		"[root] module.vpc.aws_subnet.public[2]" [label = "module.vpc.aws_subnet.public", shape = "box"]
		"[root] module.vpc.aws_vpc.main" [label = "module.vpc.aws_vpc.main", shape = "box"]
		"[root] module.vpc.aws_vpc.main (expand)" [label = "module.vpc.aws_vpc.main", shape = "box"]
		"[root] module.vpc.aws_vpc_endpoint.ec2" [label = "module.vpc.aws_vpc_endpoint.ec2", shape = "box"]
		"[root] module.vpc.aws_vpc_endpoint.ec2 (expand)" [label = "module.vpc.aws_vpc_endpoint.ec2", shape = "box"]
		"[root] module.vpc.aws_vpc_endpoint.s3" [label = "module.vpc.aws_vpc_endpoint.s3", shape = "box"]
		"[root] module.vpc.aws_vpc_endpoint.s3 (expand)" [label = "module.vpc.aws_vpc_endpoint.s3", shape = "box"]
		"[root] module.vpc.data.aws_region.current (expand)" [label = "module.vpc.data.aws_region.current", shape = "box"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" [label = "provider[\"registry.terraform.io/hashicorp/aws\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/random\"]" [label = "provider[\"registry.terraform.io/hashicorp/random\"]", shape = "diamond"]
		"[root] provider[\"registry.terraform.io/hashicorp/tls\"]" [label = "provider[\"registry.terraform.io/hashicorp/tls\"]", shape = "diamond"]
		"[root] var.alb_create_dns_record" [label = "var.alb_create_dns_record", shape = "note"]
		"[root] var.alb_domain_name" [label = "var.alb_domain_name", shape = "note"]
		"[root] var.alb_enable_access_logs" [label = "var.alb_enable_access_logs", shape = "note"]
		"[root] var.alb_health_check_path" [label = "var.alb_health_check_path", shape = "note"]
		"[root] var.alb_hosted_zone_id" [label = "var.alb_hosted_zone_id", shape = "note"]
		"[root] var.alb_ssl_certificate_arn" [label = "var.alb_ssl_certificate_arn", shape = "note"]
		"[root] var.availability_zones" [label = "var.availability_zones", shape = "note"]
		"[root] var.aws_region" [label = "var.aws_region", shape = "note"]
		"[root] var.eks_node_desired_size" [label = "var.eks_node_desired_size", shape = "note"]
		"[root] var.eks_node_instance_types" [label = "var.eks_node_instance_types", shape = "note"]
		"[root] var.eks_node_max_size" [label = "var.eks_node_max_size", shape = "note"]
		"[root] var.eks_node_min_size" [label = "var.eks_node_min_size", shape = "note"]
		"[root] var.environment" [label = "var.environment", shape = "note"]
		"[root] var.jwt_secret" [label = "var.jwt_secret", shape = "note"]
		"[root] var.mongodb_database_name" [label = "var.mongodb_database_name", shape = "note"]
		"[root] var.mongodb_instance_type" [label = "var.mongodb_instance_type", shape = "note"]
		"[root] var.mongodb_password" [label = "var.mongodb_password", shape = "note"]
		"[root] var.mongodb_username" [label = "var.mongodb_username", shape = "note"]
		"[root] var.project_name" [label = "var.project_name", shape = "note"]
		"[root] var.stack_version" [label = "var.stack_version", shape = "note"]
		"[root] var.vpc_cidr" [label = "var.vpc_cidr", shape = "note"]
		"[root] data.aws_availability_zones.available (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] data.aws_caller_identity.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] local.common_tags (expand)" -> "[root] var.environment (validation)"
		"[root] local.common_tags (expand)" -> "[root] var.stack_version (validation)"
		"[root] local.kubectl_command (expand)" -> "[root] module.eks.output.cluster_name (expand)"
		"[root] local.name_prefix (expand)" -> "[root] var.environment (validation)"
		"[root] local.name_prefix (expand)" -> "[root] var.project_name (validation)"
		"[root] local.name_prefix (expand)" -> "[root] var.stack_version (validation)"
		"[root] module.eks (close)" -> "[root] module.eks.aws_eks_addon.coredns"
		"[root] module.eks (close)" -> "[root] module.eks.aws_eks_addon.ebs_csi"
		"[root] module.eks (close)" -> "[root] module.eks.aws_eks_addon.kube_proxy"
		"[root] module.eks (close)" -> "[root] module.eks.aws_eks_addon.vpc_cni"
		"[root] module.eks (close)" -> "[root] module.eks.aws_iam_role_policy_attachment.aws_load_balancer_controller_attach (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.aws_security_group_rule.mongodb_from_eks_additional"
		"[root] module.eks (close)" -> "[root] module.eks.aws_security_group_rule.mongodb_from_eks_cluster"
		"[root] module.eks (close)" -> "[root] module.eks.output.aws_load_balancer_controller_role_arn (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_certificate_authority_data (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_endpoint (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_name (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.cluster_security_group_id (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.node_group_arn (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.node_group_security_group_id (expand)"
		"[root] module.eks (close)" -> "[root] module.eks.output.oidc_provider_arn (expand)"
		"[root] module.eks.aws_eks_addon.coredns (expand)" -> "[root] module.eks.aws_eks_node_group.main"
		"[root] module.eks.aws_eks_addon.coredns" -> "[root] module.eks.aws_eks_addon.coredns (expand)"
		"[root] module.eks.aws_eks_addon.ebs_csi (expand)" -> "[root] module.eks.aws_eks_cluster.main"
		"[root] module.eks.aws_eks_addon.ebs_csi" -> "[root] module.eks.aws_eks_addon.ebs_csi (expand)"
		"[root] module.eks.aws_eks_addon.kube_proxy (expand)" -> "[root] module.eks.aws_eks_cluster.main"
		"[root] module.eks.aws_eks_addon.kube_proxy" -> "[root] module.eks.aws_eks_addon.kube_proxy (expand)"
		"[root] module.eks.aws_eks_addon.vpc_cni (expand)" -> "[root] module.eks.aws_eks_cluster.main"
		"[root] module.eks.aws_eks_addon.vpc_cni" -> "[root] module.eks.aws_eks_addon.vpc_cni (expand)"
		"[root] module.eks.aws_eks_cluster.main (expand)" -> "[root] module.eks.aws_iam_role_policy_attachment.eks_cluster_policy (expand)"
		"[root] module.eks.aws_eks_cluster.main (expand)" -> "[root] module.eks.aws_security_group.eks_additional"
		"[root] module.eks.aws_eks_cluster.main (expand)" -> "[root] module.eks.var.private_subnet_ids (expand)"
		"[root] module.eks.aws_eks_cluster.main (expand)" -> "[root] module.eks.var.public_subnet_ids (expand)"
		"[root] module.eks.aws_eks_cluster.main" -> "[root] module.eks.aws_eks_cluster.main (expand)"
		"[root] module.eks.aws_eks_node_group.main (expand)" -> "[root] module.eks.aws_eks_cluster.main"
		"[root] module.eks.aws_eks_node_group.main (expand)" -> "[root] module.eks.aws_iam_role_policy_attachment.eks_cni_policy (expand)"
		"[root] module.eks.aws_eks_node_group.main (expand)" -> "[root] module.eks.aws_iam_role_policy_attachment.eks_container_registry_policy (expand)"
		"[root] module.eks.aws_eks_node_group.main (expand)" -> "[root] module.eks.aws_iam_role_policy_attachment.eks_worker_node_policy (expand)"
		"[root] module.eks.aws_eks_node_group.main (expand)" -> "[root] module.eks.var.node_desired_size (expand)"
		"[root] module.eks.aws_eks_node_group.main (expand)" -> "[root] module.eks.var.node_instance_types (expand)"
		"[root] module.eks.aws_eks_node_group.main (expand)" -> "[root] module.eks.var.node_max_size (expand)"
		"[root] module.eks.aws_eks_node_group.main (expand)" -> "[root] module.eks.var.node_min_size (expand)"
		"[root] module.eks.aws_eks_node_group.main" -> "[root] module.eks.aws_eks_node_group.main (expand)"
		"[root] module.eks.aws_iam_openid_connect_provider.eks (expand)" -> "[root] module.eks.data.tls_certificate.eks"
		"[root] module.eks.aws_iam_openid_connect_provider.eks" -> "[root] module.eks.aws_iam_openid_connect_provider.eks (expand)"
		"[root] module.eks.aws_iam_policy.aws_load_balancer_controller (expand)" -> "[root] module.eks.var.environment (expand)"
		"[root] module.eks.aws_iam_policy.aws_load_balancer_controller (expand)" -> "[root] module.eks.var.project_name (expand)"
		"[root] module.eks.aws_iam_policy.aws_load_balancer_controller (expand)" -> "[root] module.eks.var.stack_version (expand)"
		"[root] module.eks.aws_iam_policy.aws_load_balancer_controller (expand)" -> "[root] module.eks.var.tags (expand)"
		"[root] module.eks.aws_iam_policy.aws_load_balancer_controller (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.aws_iam_policy.aws_load_balancer_controller" -> "[root] module.eks.aws_iam_policy.aws_load_balancer_controller (expand)"
		"[root] module.eks.aws_iam_role.aws_load_balancer_controller (expand)" -> "[root] module.eks.data.aws_iam_policy_document.aws_load_balancer_controller_assume_role_policy"
		"[root] module.eks.aws_iam_role.aws_load_balancer_controller" -> "[root] module.eks.aws_iam_role.aws_load_balancer_controller (expand)"
		"[root] module.eks.aws_iam_role.eks_cluster (expand)" -> "[root] module.eks.var.environment (expand)"
		"[root] module.eks.aws_iam_role.eks_cluster (expand)" -> "[root] module.eks.var.project_name (expand)"
		"[root] module.eks.aws_iam_role.eks_cluster (expand)" -> "[root] module.eks.var.stack_version (expand)"
		"[root] module.eks.aws_iam_role.eks_cluster (expand)" -> "[root] module.eks.var.tags (expand)"
		"[root] module.eks.aws_iam_role.eks_cluster (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.aws_iam_role.eks_cluster" -> "[root] module.eks.aws_iam_role.eks_cluster (expand)"
		"[root] module.eks.aws_iam_role.eks_node_group (expand)" -> "[root] module.eks.var.environment (expand)"
		"[root] module.eks.aws_iam_role.eks_node_group (expand)" -> "[root] module.eks.var.project_name (expand)"
		"[root] module.eks.aws_iam_role.eks_node_group (expand)" -> "[root] module.eks.var.stack_version (expand)"
		"[root] module.eks.aws_iam_role.eks_node_group (expand)" -> "[root] module.eks.var.tags (expand)"
		"[root] module.eks.aws_iam_role.eks_node_group (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.eks.aws_iam_role.eks_node_group" -> "[root] module.eks.aws_iam_role.eks_node_group (expand)"
		"[root] module.eks.aws_iam_role_policy_attachment.aws_load_balancer_controller_attach (expand)" -> "[root] module.eks.aws_iam_policy.aws_load_balancer_controller"
		"[root] module.eks.aws_iam_role_policy_attachment.aws_load_balancer_controller_attach (expand)" -> "[root] module.eks.aws_iam_role.aws_load_balancer_controller"
		"[root] module.eks.aws_iam_role_policy_attachment.eks_cluster_policy (expand)" -> "[root] module.eks.aws_iam_role.eks_cluster"
		"[root] module.eks.aws_iam_role_policy_attachment.eks_cni_policy (expand)" -> "[root] module.eks.aws_iam_role.eks_node_group"
		"[root] module.eks.aws_iam_role_policy_attachment.eks_container_registry_policy (expand)" -> "[root] module.eks.aws_iam_role.eks_node_group"
		"[root] module.eks.aws_iam_role_policy_attachment.eks_worker_node_policy (expand)" -> "[root] module.eks.aws_iam_role.eks_node_group"
		"[root] module.eks.aws_security_group.eks_additional (expand)" -> "[root] module.eks.var.environment (expand)"
		"[root] module.eks.aws_security_group.eks_additional (expand)" -> "[root] module.eks.var.mongodb_security_group_id (expand)"
		"[root] module.eks.aws_security_group.eks_additional (expand)" -> "[root] module.eks.var.project_name (expand)"
		"[root] module.eks.aws_security_group.eks_additional (expand)" -> "[root] module.eks.var.stack_version (expand)"
		"[root] module.eks.aws_security_group.eks_additional (expand)" -> "[root] module.eks.var.tags (expand)"
		"[root] module.eks.aws_security_group.eks_additional (expand)" -> "[root] module.eks.var.vpc_id (expand)"
		"[root] module.eks.aws_security_group.eks_additional" -> "[root] module.eks.aws_security_group.eks_additional (expand)"
		"[root] module.eks.aws_security_group_rule.mongodb_from_eks_additional (expand)" -> "[root] module.eks.aws_security_group.eks_additional"
		"[root] module.eks.aws_security_group_rule.mongodb_from_eks_additional" -> "[root] module.eks.aws_security_group_rule.mongodb_from_eks_additional (expand)"
		"[root] module.eks.aws_security_group_rule.mongodb_from_eks_cluster (expand)" -> "[root] module.eks.aws_eks_cluster.main"
		"[root] module.eks.aws_security_group_rule.mongodb_from_eks_cluster" -> "[root] module.eks.aws_security_group_rule.mongodb_from_eks_cluster (expand)"
		"[root] module.eks.data.aws_iam_policy_document.aws_load_balancer_controller_assume_role_policy (expand)" -> "[root] module.eks.aws_iam_openid_connect_provider.eks"
		"[root] module.eks.data.aws_iam_policy_document.aws_load_balancer_controller_assume_role_policy" -> "[root] module.eks.data.aws_iam_policy_document.aws_load_balancer_controller_assume_role_policy (expand)"
		"[root] module.eks.data.tls_certificate.eks (expand)" -> "[root] module.eks.aws_eks_cluster.main"
		"[root] module.eks.data.tls_certificate.eks (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/tls\"]"
		"[root] module.eks.data.tls_certificate.eks" -> "[root] module.eks.data.tls_certificate.eks (expand)"
		"[root] module.eks.output.aws_load_balancer_controller_role_arn (expand)" -> "[root] module.eks.aws_iam_role.aws_load_balancer_controller"
		"[root] module.eks.output.cluster_certificate_authority_data (expand)" -> "[root] module.eks.aws_eks_cluster.main"
		"[root] module.eks.output.cluster_endpoint (expand)" -> "[root] module.eks.aws_eks_cluster.main"
		"[root] module.eks.output.cluster_name (expand)" -> "[root] module.eks.aws_eks_cluster.main"
		"[root] module.eks.output.cluster_security_group_id (expand)" -> "[root] module.eks.aws_eks_cluster.main"
		"[root] module.eks.output.node_group_arn (expand)" -> "[root] module.eks.aws_eks_node_group.main"
		"[root] module.eks.output.node_group_security_group_id (expand)" -> "[root] module.eks.aws_security_group.eks_additional"
		"[root] module.eks.output.oidc_provider_arn (expand)" -> "[root] module.eks.aws_iam_openid_connect_provider.eks"
		"[root] module.eks.var.environment (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.environment (expand)" -> "[root] var.environment (validation)"
		"[root] module.eks.var.mongodb_security_group_id (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.mongodb_security_group_id (expand)" -> "[root] module.mongodb_ec2.output.security_group_id (expand)"
		"[root] module.eks.var.node_desired_size (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.node_desired_size (expand)" -> "[root] var.eks_node_desired_size (validation)"
		"[root] module.eks.var.node_instance_types (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.node_instance_types (expand)" -> "[root] var.eks_node_instance_types (validation)"
		"[root] module.eks.var.node_max_size (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.node_max_size (expand)" -> "[root] var.eks_node_max_size (validation)"
		"[root] module.eks.var.node_min_size (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.node_min_size (expand)" -> "[root] var.eks_node_min_size (validation)"
		"[root] module.eks.var.private_subnet_ids (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.private_subnet_ids (expand)" -> "[root] module.vpc.output.private_subnet_ids (expand)"
		"[root] module.eks.var.project_name (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.project_name (expand)" -> "[root] var.project_name (validation)"
		"[root] module.eks.var.public_subnet_ids (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.public_subnet_ids (expand)" -> "[root] module.vpc.output.public_subnet_ids (expand)"
		"[root] module.eks.var.stack_version (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.stack_version (expand)" -> "[root] var.stack_version (validation)"
		"[root] module.eks.var.tags (expand)" -> "[root] local.common_tags (expand)"
		"[root] module.eks.var.tags (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.vpc_id (expand)" -> "[root] module.eks (expand)"
		"[root] module.eks.var.vpc_id (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.mongodb_ec2 (close)" -> "[root] module.mongodb_ec2.aws_iam_role_policy_attachment.mongodb_admin (expand)"
		"[root] module.mongodb_ec2 (close)" -> "[root] module.mongodb_ec2.output.cloudwatch_log_group_arn (expand)"
		"[root] module.mongodb_ec2 (close)" -> "[root] module.mongodb_ec2.output.cloudwatch_log_group_name (expand)"
		"[root] module.mongodb_ec2 (close)" -> "[root] module.mongodb_ec2.output.iam_role_arn (expand)"
		"[root] module.mongodb_ec2 (close)" -> "[root] module.mongodb_ec2.output.instance_id (expand)"
		"[root] module.mongodb_ec2 (close)" -> "[root] module.mongodb_ec2.output.mongodb_connection_uri (expand)"
		"[root] module.mongodb_ec2 (close)" -> "[root] module.mongodb_ec2.output.mongodb_database (expand)"
		"[root] module.mongodb_ec2 (close)" -> "[root] module.mongodb_ec2.output.mongodb_host (expand)"
		"[root] module.mongodb_ec2 (close)" -> "[root] module.mongodb_ec2.output.mongodb_port (expand)"
		"[root] module.mongodb_ec2 (close)" -> "[root] module.mongodb_ec2.output.private_ip (expand)"
		"[root] module.mongodb_ec2 (close)" -> "[root] module.mongodb_ec2.output.security_group_id (expand)"
		"[root] module.mongodb_ec2 (close)" -> "[root] module.mongodb_ec2.output.troubleshooting_commands (expand)"
		"[root] module.mongodb_ec2.aws_cloudwatch_log_group.mongodb (expand)" -> "[root] module.mongodb_ec2.var.environment (expand)"
		"[root] module.mongodb_ec2.aws_cloudwatch_log_group.mongodb (expand)" -> "[root] module.mongodb_ec2.var.project_name (expand)"
		"[root] module.mongodb_ec2.aws_cloudwatch_log_group.mongodb (expand)" -> "[root] module.mongodb_ec2.var.stack_version (expand)"
		"[root] module.mongodb_ec2.aws_cloudwatch_log_group.mongodb (expand)" -> "[root] module.mongodb_ec2.var.tags (expand)"
		"[root] module.mongodb_ec2.aws_cloudwatch_log_group.mongodb (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.mongodb_ec2.aws_cloudwatch_log_group.mongodb" -> "[root] module.mongodb_ec2.aws_cloudwatch_log_group.mongodb (expand)"
		"[root] module.mongodb_ec2.aws_iam_instance_profile.mongodb (expand)" -> "[root] module.mongodb_ec2.aws_iam_role.mongodb"
		"[root] module.mongodb_ec2.aws_iam_instance_profile.mongodb" -> "[root] module.mongodb_ec2.aws_iam_instance_profile.mongodb (expand)"
		"[root] module.mongodb_ec2.aws_iam_role.mongodb (expand)" -> "[root] module.mongodb_ec2.var.environment (expand)"
		"[root] module.mongodb_ec2.aws_iam_role.mongodb (expand)" -> "[root] module.mongodb_ec2.var.project_name (expand)"
		"[root] module.mongodb_ec2.aws_iam_role.mongodb (expand)" -> "[root] module.mongodb_ec2.var.stack_version (expand)"
		"[root] module.mongodb_ec2.aws_iam_role.mongodb (expand)" -> "[root] module.mongodb_ec2.var.tags (expand)"
		"[root] module.mongodb_ec2.aws_iam_role.mongodb (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.mongodb_ec2.aws_iam_role.mongodb" -> "[root] module.mongodb_ec2.aws_iam_role.mongodb (expand)"
		"[root] module.mongodb_ec2.aws_iam_role_policy_attachment.mongodb_admin (expand)" -> "[root] module.mongodb_ec2.aws_iam_role.mongodb"
		"[root] module.mongodb_ec2.aws_instance.mongodb (expand)" -> "[root] module.mongodb_ec2.aws_iam_instance_profile.mongodb"
		"[root] module.mongodb_ec2.aws_instance.mongodb (expand)" -> "[root] module.mongodb_ec2.aws_security_group.mongodb"
		"[root] module.mongodb_ec2.aws_instance.mongodb (expand)" -> "[root] module.mongodb_ec2.data.aws_ami.amazon_linux_2 (expand)"
		"[root] module.mongodb_ec2.aws_instance.mongodb (expand)" -> "[root] module.mongodb_ec2.local.user_data (expand)"
		"[root] module.mongodb_ec2.aws_instance.mongodb (expand)" -> "[root] module.mongodb_ec2.var.instance_type (expand)"
		"[root] module.mongodb_ec2.aws_instance.mongodb (expand)" -> "[root] module.mongodb_ec2.var.private_subnet_ids (expand)"
		"[root] module.mongodb_ec2.aws_instance.mongodb" -> "[root] module.mongodb_ec2.aws_instance.mongodb (expand)"
		"[root] module.mongodb_ec2.aws_security_group.mongodb (expand)" -> "[root] module.mongodb_ec2.var.environment (expand)"
		"[root] module.mongodb_ec2.aws_security_group.mongodb (expand)" -> "[root] module.mongodb_ec2.var.project_name (expand)"
		"[root] module.mongodb_ec2.aws_security_group.mongodb (expand)" -> "[root] module.mongodb_ec2.var.stack_version (expand)"
		"[root] module.mongodb_ec2.aws_security_group.mongodb (expand)" -> "[root] module.mongodb_ec2.var.tags (expand)"
		"[root] module.mongodb_ec2.aws_security_group.mongodb (expand)" -> "[root] module.mongodb_ec2.var.vpc_id (expand)"
		"[root] module.mongodb_ec2.aws_security_group.mongodb" -> "[root] module.mongodb_ec2.aws_security_group.mongodb (expand)"
		"[root] module.mongodb_ec2.data.aws_ami.amazon_linux_2 (expand)" -> "[root] module.mongodb_ec2 (expand)"
		"[root] module.mongodb_ec2.data.aws_ami.amazon_linux_2 (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.mongodb_ec2.local.user_data (expand)" -> "[root] module.mongodb_ec2.local.user_data_template (expand)"
		"[root] module.mongodb_ec2.local.user_data_template (expand)" -> "[root] module.mongodb_ec2.var.backup_bucket_name (expand)"
		"[root] module.mongodb_ec2.local.user_data_template (expand)" -> "[root] module.mongodb_ec2.var.mongodb_database_name (expand)"
		"[root] module.mongodb_ec2.local.user_data_template (expand)" -> "[root] module.mongodb_ec2.var.mongodb_password (expand)"
		"[root] module.mongodb_ec2.local.user_data_template (expand)" -> "[root] module.mongodb_ec2.var.mongodb_username (expand)"
		"[root] module.mongodb_ec2.output.cloudwatch_log_group_arn (expand)" -> "[root] module.mongodb_ec2.aws_cloudwatch_log_group.mongodb"
		"[root] module.mongodb_ec2.output.cloudwatch_log_group_name (expand)" -> "[root] module.mongodb_ec2.aws_cloudwatch_log_group.mongodb"
		"[root] module.mongodb_ec2.output.iam_role_arn (expand)" -> "[root] module.mongodb_ec2.aws_iam_role.mongodb"
		"[root] module.mongodb_ec2.output.instance_id (expand)" -> "[root] module.mongodb_ec2.aws_instance.mongodb"
		"[root] module.mongodb_ec2.output.mongodb_connection_uri (expand)" -> "[root] module.mongodb_ec2.aws_instance.mongodb"
		"[root] module.mongodb_ec2.output.mongodb_database (expand)" -> "[root] module.mongodb_ec2.var.mongodb_database_name (expand)"
		"[root] module.mongodb_ec2.output.mongodb_host (expand)" -> "[root] module.mongodb_ec2.aws_instance.mongodb"
		"[root] module.mongodb_ec2.output.mongodb_port (expand)" -> "[root] module.mongodb_ec2 (expand)"
		"[root] module.mongodb_ec2.output.private_ip (expand)" -> "[root] module.mongodb_ec2.aws_instance.mongodb"
		"[root] module.mongodb_ec2.output.security_group_id (expand)" -> "[root] module.mongodb_ec2.aws_security_group.mongodb"
		"[root] module.mongodb_ec2.output.troubleshooting_commands (expand)" -> "[root] module.mongodb_ec2.aws_cloudwatch_log_group.mongodb"
		"[root] module.mongodb_ec2.output.troubleshooting_commands (expand)" -> "[root] module.mongodb_ec2.aws_instance.mongodb"
		"[root] module.mongodb_ec2.var.backup_bucket_name (expand)" -> "[root] module.mongodb_ec2 (expand)"
		"[root] module.mongodb_ec2.var.backup_bucket_name (expand)" -> "[root] module.s3_backup.output.bucket_name (expand)"
		"[root] module.mongodb_ec2.var.environment (expand)" -> "[root] module.mongodb_ec2 (expand)"
		"[root] module.mongodb_ec2.var.environment (expand)" -> "[root] var.environment (validation)"
		"[root] module.mongodb_ec2.var.instance_type (expand)" -> "[root] module.mongodb_ec2 (expand)"
		"[root] module.mongodb_ec2.var.instance_type (expand)" -> "[root] var.mongodb_instance_type"
		"[root] module.mongodb_ec2.var.mongodb_database_name (expand)" -> "[root] module.mongodb_ec2 (expand)"
		"[root] module.mongodb_ec2.var.mongodb_database_name (expand)" -> "[root] var.mongodb_database_name (validation)"
		"[root] module.mongodb_ec2.var.mongodb_password (expand)" -> "[root] module.mongodb_ec2 (expand)"
		"[root] module.mongodb_ec2.var.mongodb_password (expand)" -> "[root] var.mongodb_password"
		"[root] module.mongodb_ec2.var.mongodb_username (expand)" -> "[root] module.mongodb_ec2 (expand)"
		"[root] module.mongodb_ec2.var.mongodb_username (expand)" -> "[root] var.mongodb_username"
		"[root] module.mongodb_ec2.var.private_subnet_ids (expand)" -> "[root] module.mongodb_ec2 (expand)"
		"[root] module.mongodb_ec2.var.private_subnet_ids (expand)" -> "[root] module.vpc.output.private_subnet_ids (expand)"
		"[root] module.mongodb_ec2.var.project_name (expand)" -> "[root] module.mongodb_ec2 (expand)"
		"[root] module.mongodb_ec2.var.project_name (expand)" -> "[root] var.project_name (validation)"
		"[root] module.mongodb_ec2.var.stack_version (expand)" -> "[root] module.mongodb_ec2 (expand)"
		"[root] module.mongodb_ec2.var.stack_version (expand)" -> "[root] var.stack_version (validation)"
		"[root] module.mongodb_ec2.var.tags (expand)" -> "[root] local.common_tags (expand)"
		"[root] module.mongodb_ec2.var.tags (expand)" -> "[root] module.mongodb_ec2 (expand)"
		"[root] module.mongodb_ec2.var.vpc_id (expand)" -> "[root] module.mongodb_ec2 (expand)"
		"[root] module.mongodb_ec2.var.vpc_id (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.s3_backup (close)" -> "[root] module.s3_backup.aws_s3_bucket_lifecycle_configuration.backup (expand)"
		"[root] module.s3_backup (close)" -> "[root] module.s3_backup.aws_s3_bucket_policy.backup_public_read (expand)"
		"[root] module.s3_backup (close)" -> "[root] module.s3_backup.aws_s3_bucket_versioning.backup (expand)"
		"[root] module.s3_backup (close)" -> "[root] module.s3_backup.output.bucket_arn (expand)"
		"[root] module.s3_backup (close)" -> "[root] module.s3_backup.output.bucket_name (expand)"
		"[root] module.s3_backup (close)" -> "[root] module.s3_backup.output.public_url (expand)"
		"[root] module.s3_backup.aws_s3_bucket.backup (expand)" -> "[root] module.s3_backup.local.bucket_name (expand)"
		"[root] module.s3_backup.aws_s3_bucket.backup (expand)" -> "[root] module.s3_backup.var.tags (expand)"
		"[root] module.s3_backup.aws_s3_bucket.backup (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.s3_backup.aws_s3_bucket.backup" -> "[root] module.s3_backup.aws_s3_bucket.backup (expand)"
		"[root] module.s3_backup.aws_s3_bucket_lifecycle_configuration.backup (expand)" -> "[root] module.s3_backup.aws_s3_bucket.backup"
		"[root] module.s3_backup.aws_s3_bucket_policy.backup_public_read (expand)" -> "[root] module.s3_backup.aws_s3_bucket_public_access_block.backup (expand)"
		"[root] module.s3_backup.aws_s3_bucket_public_access_block.backup (expand)" -> "[root] module.s3_backup.aws_s3_bucket.backup"
		"[root] module.s3_backup.aws_s3_bucket_versioning.backup (expand)" -> "[root] module.s3_backup.aws_s3_bucket.backup"
		"[root] module.s3_backup.local.bucket_name (expand)" -> "[root] module.s3_backup.random_string.bucket_suffix (expand)"
		"[root] module.s3_backup.local.bucket_name (expand)" -> "[root] module.s3_backup.var.environment (expand)"
		"[root] module.s3_backup.local.bucket_name (expand)" -> "[root] module.s3_backup.var.project_name (expand)"
		"[root] module.s3_backup.local.bucket_name (expand)" -> "[root] module.s3_backup.var.stack_version (expand)"
		"[root] module.s3_backup.output.bucket_arn (expand)" -> "[root] module.s3_backup.aws_s3_bucket.backup"
		"[root] module.s3_backup.output.bucket_name (expand)" -> "[root] module.s3_backup.aws_s3_bucket.backup"
		"[root] module.s3_backup.output.public_url (expand)" -> "[root] module.s3_backup.aws_s3_bucket.backup"
		"[root] module.s3_backup.random_string.bucket_suffix (expand)" -> "[root] module.s3_backup (expand)"
		"[root] module.s3_backup.random_string.bucket_suffix (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"]"
		"[root] module.s3_backup.var.environment (expand)" -> "[root] module.s3_backup (expand)"
		"[root] module.s3_backup.var.environment (expand)" -> "[root] var.environment (validation)"
		"[root] module.s3_backup.var.project_name (expand)" -> "[root] module.s3_backup (expand)"
		"[root] module.s3_backup.var.project_name (expand)" -> "[root] var.project_name (validation)"
		"[root] module.s3_backup.var.stack_version (expand)" -> "[root] module.s3_backup (expand)"
		"[root] module.s3_backup.var.stack_version (expand)" -> "[root] var.stack_version (validation)"
		"[root] module.s3_backup.var.tags (expand)" -> "[root] local.common_tags (expand)"
		"[root] module.s3_backup.var.tags (expand)" -> "[root] module.s3_backup (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_route_table_association.private (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.aws_route_table_association.public (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.ec2_vpc_endpoint_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.internet_gateway_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.nat_gateway_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.private_subnet_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.public_subnet_ids (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.s3_vpc_endpoint_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_endpoints_security_group_id (expand)"
		"[root] module.vpc (close)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.aws_internet_gateway.main"
		"[root] module.vpc.aws_eip.nat (expand)" -> "[root] module.vpc.var.availability_zones (expand)"
		"[root] module.vpc.aws_eip.nat[0]" -> "[root] module.vpc.aws_eip.nat (expand)"
		"[root] module.vpc.aws_eip.nat[1]" -> "[root] module.vpc.aws_eip.nat (expand)"
		"[root] module.vpc.aws_eip.nat[2]" -> "[root] module.vpc.aws_eip.nat (expand)"
		"[root] module.vpc.aws_internet_gateway.main (expand)" -> "[root] module.vpc.aws_vpc.main"
		"[root] module.vpc.aws_internet_gateway.main" -> "[root] module.vpc.aws_internet_gateway.main (expand)"
		"[root] module.vpc.aws_nat_gateway.main (expand)" -> "[root] module.vpc.aws_eip.nat[0]"
		"[root] module.vpc.aws_nat_gateway.main (expand)" -> "[root] module.vpc.aws_eip.nat[1]"
		"[root] module.vpc.aws_nat_gateway.main (expand)" -> "[root] module.vpc.aws_eip.nat[2]"
		"[root] module.vpc.aws_nat_gateway.main (expand)" -> "[root] module.vpc.aws_subnet.public[0]"
		"[root] module.vpc.aws_nat_gateway.main (expand)" -> "[root] module.vpc.aws_subnet.public[1]"
		"[root] module.vpc.aws_nat_gateway.main (expand)" -> "[root] module.vpc.aws_subnet.public[2]"
		"[root] module.vpc.aws_nat_gateway.main[0]" -> "[root] module.vpc.aws_nat_gateway.main (expand)"
		"[root] module.vpc.aws_nat_gateway.main[1]" -> "[root] module.vpc.aws_nat_gateway.main (expand)"
		"[root] module.vpc.aws_nat_gateway.main[2]" -> "[root] module.vpc.aws_nat_gateway.main (expand)"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.aws_nat_gateway.main[0]"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.aws_nat_gateway.main[1]"
		"[root] module.vpc.aws_route_table.private (expand)" -> "[root] module.vpc.aws_nat_gateway.main[2]"
		"[root] module.vpc.aws_route_table.private[0]" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table.private[1]" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table.private[2]" -> "[root] module.vpc.aws_route_table.private (expand)"
		"[root] module.vpc.aws_route_table.public (expand)" -> "[root] module.vpc.aws_internet_gateway.main"
		"[root] module.vpc.aws_route_table.public" -> "[root] module.vpc.aws_route_table.public (expand)"
		"[root] module.vpc.aws_route_table_association.private (expand)" -> "[root] module.vpc.aws_route_table.private[0]"
		"[root] module.vpc.aws_route_table_association.private (expand)" -> "[root] module.vpc.aws_route_table.private[1]"
		"[root] module.vpc.aws_route_table_association.private (expand)" -> "[root] module.vpc.aws_route_table.private[2]"
		"[root] module.vpc.aws_route_table_association.private (expand)" -> "[root] module.vpc.aws_subnet.private[0]"
		"[root] module.vpc.aws_route_table_association.private (expand)" -> "[root] module.vpc.aws_subnet.private[1]"
		"[root] module.vpc.aws_route_table_association.private (expand)" -> "[root] module.vpc.aws_subnet.private[2]"
		"[root] module.vpc.aws_route_table_association.public (expand)" -> "[root] module.vpc.aws_route_table.public"
		"[root] module.vpc.aws_route_table_association.public (expand)" -> "[root] module.vpc.aws_subnet.public[0]"
		"[root] module.vpc.aws_route_table_association.public (expand)" -> "[root] module.vpc.aws_subnet.public[1]"
		"[root] module.vpc.aws_route_table_association.public (expand)" -> "[root] module.vpc.aws_subnet.public[2]"
		"[root] module.vpc.aws_security_group.vpc_endpoints (expand)" -> "[root] module.vpc.aws_vpc.main"
		"[root] module.vpc.aws_security_group.vpc_endpoints" -> "[root] module.vpc.aws_security_group.vpc_endpoints (expand)"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.aws_vpc.main"
		"[root] module.vpc.aws_subnet.private (expand)" -> "[root] module.vpc.var.availability_zones (expand)"
		"[root] module.vpc.aws_subnet.private[0]" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.aws_subnet.private[1]" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.aws_subnet.private[2]" -> "[root] module.vpc.aws_subnet.private (expand)"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.aws_internet_gateway.main"
		"[root] module.vpc.aws_subnet.public (expand)" -> "[root] module.vpc.var.availability_zones (expand)"
		"[root] module.vpc.aws_subnet.public[0]" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.aws_subnet.public[1]" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.aws_subnet.public[2]" -> "[root] module.vpc.aws_subnet.public (expand)"
		"[root] module.vpc.aws_vpc.main (expand)" -> "[root] module.vpc.var.environment (expand)"
		"[root] module.vpc.aws_vpc.main (expand)" -> "[root] module.vpc.var.project_name (expand)"
		"[root] module.vpc.aws_vpc.main (expand)" -> "[root] module.vpc.var.stack_version (expand)"
		"[root] module.vpc.aws_vpc.main (expand)" -> "[root] module.vpc.var.tags (expand)"
		"[root] module.vpc.aws_vpc.main (expand)" -> "[root] module.vpc.var.vpc_cidr (expand)"
		"[root] module.vpc.aws_vpc.main (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.aws_vpc.main" -> "[root] module.vpc.aws_vpc.main (expand)"
		"[root] module.vpc.aws_vpc_endpoint.ec2 (expand)" -> "[root] module.vpc.aws_security_group.vpc_endpoints"
		"[root] module.vpc.aws_vpc_endpoint.ec2 (expand)" -> "[root] module.vpc.aws_subnet.private[0]"
		"[root] module.vpc.aws_vpc_endpoint.ec2 (expand)" -> "[root] module.vpc.aws_subnet.private[1]"
		"[root] module.vpc.aws_vpc_endpoint.ec2 (expand)" -> "[root] module.vpc.aws_subnet.private[2]"
		"[root] module.vpc.aws_vpc_endpoint.ec2 (expand)" -> "[root] module.vpc.data.aws_region.current (expand)"
		"[root] module.vpc.aws_vpc_endpoint.ec2" -> "[root] module.vpc.aws_vpc_endpoint.ec2 (expand)"
		"[root] module.vpc.aws_vpc_endpoint.s3 (expand)" -> "[root] module.vpc.aws_route_table.private[0]"
		"[root] module.vpc.aws_vpc_endpoint.s3 (expand)" -> "[root] module.vpc.aws_route_table.private[1]"
		"[root] module.vpc.aws_vpc_endpoint.s3 (expand)" -> "[root] module.vpc.aws_route_table.private[2]"
		"[root] module.vpc.aws_vpc_endpoint.s3 (expand)" -> "[root] module.vpc.data.aws_region.current (expand)"
		"[root] module.vpc.aws_vpc_endpoint.s3" -> "[root] module.vpc.aws_vpc_endpoint.s3 (expand)"
		"[root] module.vpc.data.aws_region.current (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.data.aws_region.current (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.vpc.output.ec2_vpc_endpoint_id (expand)" -> "[root] module.vpc.aws_vpc_endpoint.ec2"
		"[root] module.vpc.output.internet_gateway_id (expand)" -> "[root] module.vpc.aws_internet_gateway.main"
		"[root] module.vpc.output.nat_gateway_ids (expand)" -> "[root] module.vpc.aws_nat_gateway.main[0]"
		"[root] module.vpc.output.nat_gateway_ids (expand)" -> "[root] module.vpc.aws_nat_gateway.main[1]"
		"[root] module.vpc.output.nat_gateway_ids (expand)" -> "[root] module.vpc.aws_nat_gateway.main[2]"
		"[root] module.vpc.output.private_subnet_ids (expand)" -> "[root] module.vpc.aws_subnet.private[0]"
		"[root] module.vpc.output.private_subnet_ids (expand)" -> "[root] module.vpc.aws_subnet.private[1]"
		"[root] module.vpc.output.private_subnet_ids (expand)" -> "[root] module.vpc.aws_subnet.private[2]"
		"[root] module.vpc.output.public_subnet_ids (expand)" -> "[root] module.vpc.aws_subnet.public[0]"
		"[root] module.vpc.output.public_subnet_ids (expand)" -> "[root] module.vpc.aws_subnet.public[1]"
		"[root] module.vpc.output.public_subnet_ids (expand)" -> "[root] module.vpc.aws_subnet.public[2]"
		"[root] module.vpc.output.s3_vpc_endpoint_id (expand)" -> "[root] module.vpc.aws_vpc_endpoint.s3"
		"[root] module.vpc.output.vpc_endpoints_security_group_id (expand)" -> "[root] module.vpc.aws_security_group.vpc_endpoints"
		"[root] module.vpc.output.vpc_id (expand)" -> "[root] module.vpc.aws_vpc.main"
		"[root] module.vpc.var.availability_zones (expand)" -> "[root] data.aws_availability_zones.available (expand)"
		"[root] module.vpc.var.availability_zones (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.environment (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.environment (expand)" -> "[root] var.environment (validation)"
		"[root] module.vpc.var.project_name (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.project_name (expand)" -> "[root] var.project_name (validation)"
		"[root] module.vpc.var.stack_version (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.stack_version (expand)" -> "[root] var.stack_version (validation)"
		"[root] module.vpc.var.tags (expand)" -> "[root] local.common_tags (expand)"
		"[root] module.vpc.var.tags (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_cidr (expand)" -> "[root] module.vpc (expand)"
		"[root] module.vpc.var.vpc_cidr (expand)" -> "[root] var.vpc_cidr"
		"[root] output.application_access_instructions (expand)" -> "[root] local.kubectl_command (expand)"
		"[root] output.aws_region (expand)" -> "[root] var.aws_region (validation)"
		"[root] output.eks_aws_load_balancer_controller_role_arn (expand)" -> "[root] module.eks.output.aws_load_balancer_controller_role_arn (expand)"
		"[root] output.eks_cluster_endpoint (expand)" -> "[root] module.eks.output.cluster_endpoint (expand)"
		"[root] output.eks_cluster_name (expand)" -> "[root] module.eks.output.cluster_name (expand)"
		"[root] output.eks_cluster_security_group_id (expand)" -> "[root] module.eks.output.cluster_security_group_id (expand)"
		"[root] output.eks_node_group_security_group_id (expand)" -> "[root] module.eks.output.node_group_security_group_id (expand)"
		"[root] output.jwt_secret (expand)" -> "[root] var.jwt_secret"
		"[root] output.kubectl_config_command (expand)" -> "[root] module.eks.output.cluster_name (expand)"
		"[root] output.mongodb_cloudwatch_logs (expand)" -> "[root] module.mongodb_ec2.output.cloudwatch_log_group_name (expand)"
		"[root] output.mongodb_connection_string (expand)" -> "[root] module.mongodb_ec2.output.mongodb_connection_uri (expand)"
		"[root] output.mongodb_database_name (expand)" -> "[root] var.mongodb_database_name (validation)"
		"[root] output.mongodb_instance_id (expand)" -> "[root] module.mongodb_ec2.output.instance_id (expand)"
		"[root] output.mongodb_password (expand)" -> "[root] var.mongodb_password"
		"[root] output.mongodb_private_ip (expand)" -> "[root] module.mongodb_ec2.output.private_ip (expand)"
		"[root] output.mongodb_security_group_id (expand)" -> "[root] module.mongodb_ec2.output.security_group_id (expand)"
		"[root] output.mongodb_troubleshooting (expand)" -> "[root] module.mongodb_ec2.output.troubleshooting_commands (expand)"
		"[root] output.mongodb_username (expand)" -> "[root] var.mongodb_username"
		"[root] output.s3_backup_bucket_name (expand)" -> "[root] module.s3_backup.output.bucket_name (expand)"
		"[root] output.s3_backup_public_url (expand)" -> "[root] module.s3_backup.output.public_url (expand)"
		"[root] output.s3_backup_public_url_latest_db (expand)" -> "[root] module.s3_backup.output.public_url (expand)"
		"[root] output.vpc_id (expand)" -> "[root] module.vpc.output.vpc_id (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] data.aws_caller_identity.current (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.aws_eks_addon.coredns"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.aws_eks_addon.ebs_csi"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.aws_eks_addon.kube_proxy"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.aws_eks_addon.vpc_cni"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.aws_iam_role_policy_attachment.aws_load_balancer_controller_attach (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.aws_security_group_rule.mongodb_from_eks_additional"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.eks.aws_security_group_rule.mongodb_from_eks_cluster"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.mongodb_ec2.aws_cloudwatch_log_group.mongodb"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.mongodb_ec2.aws_iam_role_policy_attachment.mongodb_admin (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.mongodb_ec2.aws_instance.mongodb"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.s3_backup.aws_s3_bucket_lifecycle_configuration.backup (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.s3_backup.aws_s3_bucket_policy.backup_public_read (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.s3_backup.aws_s3_bucket_versioning.backup (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.private (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_route_table_association.public (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpc_endpoint.ec2"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.vpc.aws_vpc_endpoint.s3"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" -> "[root] local.common_tags (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" -> "[root] var.aws_region (validation)"
		"[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)" -> "[root] module.s3_backup.random_string.bucket_suffix (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/tls\"] (close)" -> "[root] module.eks.data.tls_certificate.eks"
		"[root] root" -> "[root] local.name_prefix (expand)"
		"[root] root" -> "[root] module.eks (close)"
		"[root] root" -> "[root] module.mongodb_ec2 (close)"
		"[root] root" -> "[root] module.s3_backup (close)"
		"[root] root" -> "[root] module.vpc (close)"
		"[root] root" -> "[root] output.application_access_instructions (expand)"
		"[root] root" -> "[root] output.application_url_command (expand)"
		"[root] root" -> "[root] output.aws_region (expand)"
		"[root] root" -> "[root] output.eks_aws_load_balancer_controller_role_arn (expand)"
		"[root] root" -> "[root] output.eks_cluster_endpoint (expand)"
		"[root] root" -> "[root] output.eks_cluster_name (expand)"
		"[root] root" -> "[root] output.eks_cluster_security_group_id (expand)"
		"[root] root" -> "[root] output.eks_node_group_security_group_id (expand)"
		"[root] root" -> "[root] output.jwt_secret (expand)"
		"[root] root" -> "[root] output.kubectl_config_command (expand)"
		"[root] root" -> "[root] output.mongodb_cloudwatch_logs (expand)"
		"[root] root" -> "[root] output.mongodb_connection_string (expand)"
		"[root] root" -> "[root] output.mongodb_database_name (expand)"
		"[root] root" -> "[root] output.mongodb_instance_id (expand)"
		"[root] root" -> "[root] output.mongodb_password (expand)"
		"[root] root" -> "[root] output.mongodb_private_ip (expand)"
		"[root] root" -> "[root] output.mongodb_security_group_id (expand)"
		"[root] root" -> "[root] output.mongodb_troubleshooting (expand)"
		"[root] root" -> "[root] output.mongodb_username (expand)"
		"[root] root" -> "[root] output.s3_backup_bucket_name (expand)"
		"[root] root" -> "[root] output.s3_backup_public_url (expand)"
		"[root] root" -> "[root] output.s3_backup_public_url_latest_db (expand)"
		"[root] root" -> "[root] output.vpc_id (expand)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/random\"] (close)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/tls\"] (close)"
		"[root] root" -> "[root] var.alb_create_dns_record"
		"[root] root" -> "[root] var.alb_domain_name (validation)"
		"[root] root" -> "[root] var.alb_enable_access_logs"
		"[root] root" -> "[root] var.alb_health_check_path (validation)"
		"[root] root" -> "[root] var.alb_hosted_zone_id"
		"[root] root" -> "[root] var.alb_ssl_certificate_arn"
		"[root] root" -> "[root] var.availability_zones"
		"[root] var.alb_domain_name (validation)" -> "[root] var.alb_domain_name"
		"[root] var.alb_health_check_path (validation)" -> "[root] var.alb_health_check_path"
		"[root] var.aws_region (validation)" -> "[root] var.aws_region"
		"[root] var.eks_node_desired_size (validation)" -> "[root] var.eks_node_desired_size"
		"[root] var.eks_node_instance_types (validation)" -> "[root] var.eks_node_instance_types"
		"[root] var.eks_node_max_size (validation)" -> "[root] var.eks_node_max_size"
		"[root] var.eks_node_min_size (validation)" -> "[root] var.eks_node_min_size"
		"[root] var.environment (validation)" -> "[root] var.environment"
		"[root] var.mongodb_database_name (validation)" -> "[root] var.mongodb_database_name"
		"[root] var.project_name (validation)" -> "[root] var.project_name"
		"[root] var.stack_version (validation)" -> "[root] var.stack_version"
	}
}
