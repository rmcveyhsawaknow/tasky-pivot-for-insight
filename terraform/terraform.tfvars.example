# ==============================================================================
# TASKY TERRAFORM VARIABLES EXAMPLE
# ==============================================================================
# Copy this file to terraform.tfvars and customize the values for your deployment

# AWS Configuration
aws_region = "us-east-1"  # Change to your preferred AWS region

# Environment and Project
environment    = "dev"      # Options: dev, stg, prd
project_name   = "tasky"    # Used for resource naming and tagging
stack_version  = "v1"       # Version identifier to avoid duplicates

# VPC Configuration
vpc_cidr = "10.0.0.0/16"  # VPC CIDR block

# EKS Cluster Configuration
eks_node_instance_types = ["t3.medium"]  # Instance types for worker nodes
eks_node_desired_size   = 2              # Desired number of worker nodes
eks_node_max_size       = 3              # Maximum number of worker nodes
eks_node_min_size       = 1              # Minimum number of worker nodes

# MongoDB Configuration
mongodb_instance_type = "t3.medium"           # EC2 instance type for MongoDB
mongodb_username     = "taskyadmin"           # MongoDB admin username
mongodb_password     = "TaskySecure123!"      # MongoDB admin password (change this!)
mongodb_database_name = "go-mongodb"          # MongoDB database name used by the application

# JWT Configuration
jwt_secret = "tasky-jwt-secret-key-for-insight-exercise"  # JWT secret key (change this!)

# ==============================================================================
# APPLICATION LOAD BALANCER CONFIGURATION
# ==============================================================================

# Health Check Configuration
alb_health_check_path = "/"  # Ensure your app responds with 200 OK at this path

# SSL/HTTPS Configuration (Optional)
# Uncomment and configure if you want HTTPS termination at ALB
# alb_ssl_certificate_arn = "arn:aws:acm:us-east-1:123456789012:certificate/your-cert-id"

# Access Logs (Optional - increases S3 costs)
alb_enable_access_logs = false

# Custom Domain Configuration
# Set to true if you want Terraform to manage Route53 DNS record
# Note: This requires your domain to be managed by Route53
alb_create_dns_record = false

# If using Route53 (alb_create_dns_record = true), configure these:
# alb_domain_name = "ideatasky.ryanmcvey.me"
# alb_hosted_zone_id = "Z1D633PJN98FT9"  # Your Route53 hosted zone ID

# ==============================================================================
# DOMAIN CONFIGURATION NOTES
# ==============================================================================

# For Cloudflare-managed domains (recommended approach):
# 1. Keep alb_create_dns_record = false
# 2. After Terraform apply, get ALB DNS name from outputs
# 3. Create CNAME record in Cloudflare:
#    - Name: ideatasky
#    - Target: <ALB-DNS-NAME>
#    - Proxy Status: DNS Only (grey cloud)

# For Route53-managed domains:
# 1. Set alb_create_dns_record = true
# 2. Set alb_domain_name = "ideatasky.ryanmcvey.me"
# 3. Set alb_hosted_zone_id to your Route53 hosted zone ID
# 4. Terraform will create the DNS record automatically

# ==============================================================================
# COST OPTIMIZATION SETTINGS
# ==============================================================================

# The ALB configuration includes cost optimization features:
# - Idle timeout set to 60 seconds
# - Health check interval optimized for cost vs performance
# - Access logs disabled by default
# - Single ALB can serve multiple applications with path-based routing

# ==============================================================================
# SECURITY NOTES:
# ==============================================================================
# 1. Change the default passwords before deploying to any environment
# 2. Use strong, unique passwords for mongodb_password and jwt_secret
# 3. Consider using AWS Secrets Manager for production deployments
# 4. Never commit terraform.tfvars with real secrets to version control
# 5. Add terraform.tfvars to .gitignore to prevent accidental commits
